---
on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      version:
        required: false
        type: string

jobs:
  Prepare:
    runs-on: ubuntu-latest
    outputs:
      token: ${{ steps.fetch-token.outputs.TOKEN }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - name: Fetch token
        id: fetch-token
        run: |
          export TOKEN=$(aws codeartifact get-authorization-token \
          --domain ${{ secrets.AWS_DOMAIN }} \
          --query authorizationToken \
          --output text \
          )
          echo "::set-output name=TOKEN::$TOKEN"
  Validate:
    needs: Prepare
    runs-on: ubuntu-latest
    container:
      image: gradle:7.4.2-jdk8
    env:
      TOKEN: ${{ needs.Prepare.outputs.token }}
    steps:
      - uses: actions/checkout@v3
      - uses: go-picky/picky-cicd/actions/gradle/validate@main
  Release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [Prepare, Validate]
    runs-on: ubuntu-latest
    container:
      image: gradle:7.4.2-jdk8
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - run: git config --global --add safe.directory /__w/${{ inputs.name }}/${{ inputs.name }}
      - uses: actions/checkout@v3
      - name: Set env
        run: echo "RELEASE_VERSION=$(echo ${GITHUB_REF#refs/*/} | sed 's/[^0-9^\.]*//g')" >> $GITHUB_ENV
      - run: sed -ie "s/^version.*$/version = \"${RELEASE_VERSION}\"/" build.gradle.kts
      - name: Commit files
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add build.gradle.kts
          git commit -m "Update project version to ${RELEASE_VERSION}"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
      - name: Uploading build artifact
        env:
          TOKEN: ${{ needs.Prepare.outputs.token }}
        run: gradle publish
