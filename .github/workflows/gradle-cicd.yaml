---
on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      version:
        required: false
        type: string

jobs:
  Prepare:
    runs-on: ubuntu-latest
    outputs:
      token: ${{ steps.fetch-token.outputs.TOKEN }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - name: Fetch token
        id: fetch-token
        run: |
          export TOKEN=$(aws codeartifact get-authorization-token \
          --domain ${{ secrets.AWS_DOMAIN }} \
          --query authorizationToken \
          --output text \
          )
          echo "::set-output name=TOKEN::$TOKEN"
  Validate:
    needs: Prepare
    # environment: $ENV # to enable once secrets have been setup per environment
    runs-on: ubuntu-latest
    container:
      image: gradle:7.4.2-jdk8
    env:
      TOKEN: ${{ needs.Prepare.outputs.token }}
    steps:
      - uses: actions/checkout@v3
      - uses: go-picky/picky-cicd/actions/gradle/validate@main
  # Build:   # run build on creation of new tag
  #   needs: [Prepare, Validate]
  #   runs-on: ubuntu-latest
  #   container:
  #     image: gradle:7.4.2-jdk8
  #   env:
  #     TOKEN: ${{ needs.Prepare.outputs.token }}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: go-picky/picky-cicd/actions/gradle/build@main
  #       with:
  #         name: ${{ inputs.name }}
  # Release:
  #   needs: Build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: go-picky/picky-cicd/actions/gradle/release@main
  #       with:
  #         name: ${{ inputs.name }}
  #         aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BuildAndRelease:
    needs: [Prepare, Validate]
    runs-on: ubuntu-latest
    env:
      TOKEN: ${{ needs.Prepare.outputs.token }}
    steps:
      - uses: actions/checkout@v3
      - uses: go-picky/picky-cicd/actions/gradle/build-and-release@main
        with:
          name: ${{ inputs.name }}
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  Deploy:
    needs: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: go-picky/picky-cicd/actions/aws/deploy@main
        with:
          name: ${{ inputs.name }}
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
