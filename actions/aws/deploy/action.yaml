---
name: 'AWS deploy'
description: 'Deploy the application onto AWS ECS'
inputs:
  name:
    required: true
    description: 'Name of the project which will be used to reference and name the output artifact'
    type: string
  version:
    required: false
    description: 'Version used to tag the artifact'
    type: string
  aws_access_key_id:
    required: true
    description: 'AWS access key ID'
  aws_secret_access_key:
    required: true
    description: 'AWS secret access key'
  cluster_arn:
    required: true
    description: 'ARN of the AWS ECS cluster'
  aws_region:
    required: true
    description: 'region of deploy'

runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
        aws-region: ${{ inputs.aws_region }}
    # - name: Create service if not exists
    #   env:
    #     ENV: development
    #   run: |
    #     aws ecs describe-services --cluster ${{ inputs.cluster_arn }} --services ${{ inputs.name }} | grep ACTIVE || \
    #     aws ecs create-service \
    #       --cluster ${{ inputs.cluster_arn }} \
    #       --service-name ${{ inputs.name }} \
    #       --desired-count 1 \
    #       --launch-type FARGATE \
    #       --task-definition ${{ inputs.name }}-task-def-test \
    #       --network-configuration "awsvpcConfiguration={subnets=[subnet-12344321],securityGroups=[sg-12344321],assignPublicIp=DISABLED}"
      # shell: bash
    - name: Register task definitions if different
      env:
        ENV: development
      run: aws ecs register-task-definition --cli-input-yaml file://ecs/$ENV-task-def.yaml
      shell: bash
    - name: Update service
      env:
        ENV: development
      run: aws ecs update-service --cluster ${{ inputs.cluster_arn }} --service ${{ inputs.name }} --task-definition ${{ inputs.name }}-task-def
      shell: bash
